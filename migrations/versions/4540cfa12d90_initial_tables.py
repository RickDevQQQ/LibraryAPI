"""Initial tables

Revision ID: 4540cfa12d90
Revises: 
Create Date: 2024-07-21 20:32:19.591816

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4540cfa12d90'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('book',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('price', sa.DECIMAL(precision=11, scale=2, decimal_return_scale=2), nullable=False),
    sa.Column('page', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['author.id'], name=op.f('fk_book_author_id_author'), onupdate='RESTRICT', ondelete='RESTRICT', use_alter=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_book'))
    )
    op.create_table('book_genre',
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('genre_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], name=op.f('fk_book_genre_book_id_book'), onupdate='RESTRICT', ondelete='RESTRICT', use_alter=True),
    sa.ForeignKeyConstraint(['genre_id'], ['genre.id'], name=op.f('fk_book_genre_genre_id_genre'), onupdate='RESTRICT', ondelete='RESTRICT', use_alter=True),
    sa.PrimaryKeyConstraint('book_id', 'genre_id', name=op.f('pk_book_genre'))
    )
    op.create_table('genre',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_genre'))
    )
    op.create_table('user',
    sa.Column('first_name', sa.String(length=255), nullable=False),
    sa.Column('last_name', sa.String(length=255), nullable=False),
    sa.Column('avatar', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user')
    op.drop_table('genre')
    op.drop_table('book_genre')
    op.drop_table('book')
    # ### end Alembic commands ###
